apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: golang-website-template
  title: Golang Website Starter
  description: Scaffolds a simple Go web application for your personal site.
spec:
  owner: user:default/you
  type: service

  parameters:
    - title: Project Information
      required:
        - projectName
      properties:
        projectName:
          type: string
          description: The name of your Go project
        moduleName:
          type: string
          description: The Go module path (e.g., github.com/yourusername/project)

  steps:
    - id: create-directory
      name: Create Project Directory
      action: filesystem:mkdir
      input:
        path: './${{ parameters.projectName }}'

    - id: init-go-mod
      name: Initialize Go Module
      action: shell:execute
      input:
        # Change directory and run go mod init
        workingDirectory: './${{ parameters.projectName }}'
        command: 'go mod init ${{ parameters.moduleName }}'

    - id: create-main
      name: Create Main Go File
      action: filesystem:write
      input:
        path: './${{ parameters.projectName }}/main.go'
        content: |
          package main

          import (
              "fmt"
              "net/http"
          )

          func handler(w http.ResponseWriter, r *http.Request) {
              fmt.Fprintf(w, "Hello from ${{ parameters.projectName }}!")
          }

          func main() {
              http.HandleFunc("/", handler)
              fmt.Println("Starting server on :8080")
              http.ListenAndServe(":8080", nil)
          }

    - id: log-success
      name: Log Success
      action: debug:log
      input:
        message: 'Golang website project ${{ parameters.projectName }} has been created successfully!'
